basePath: /v1
definitions:
  entity.TaskRequest:
    properties:
      completed:
        example: true
        type: boolean
      description:
        example: Read the book The Lord of the Rings, stopped at the third chapter
        type: string
      due_date:
        example: "2024-06-10"
        type: string
      title:
        example: Read a book
        type: string
    type: object
  entity.TaskResponse:
    properties:
      completed:
        example: true
        type: boolean
      description:
        example: Read the book The Lord of the Rings, stopped at the third chapter
        type: string
      due_date:
        example: "2024-06-10T00:00:00Z"
        type: string
      id:
        example: 22
        type: integer
      title:
        example: Read a book
        type: string
    type: object
  v1.message:
    properties:
      message:
        example: Test message
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: marat.xasbiullin@gmail.com
    name: Marat Khasbiullin
  description: Todo API example
  title: ToDo API
  version: "1.0"
paths:
  /todo/task:
    get:
      consumes:
      - application/json
      description: Get Task by Date With Filter
      parameters:
      - description: on what date to issue the tasks
        in: query
        name: date
        type: string
      - description: filter parameter completed
        in: query
        name: status
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.TaskResponse'
            type: array
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get Task by Date With Filter
      tags:
      - task
    post:
      consumes:
      - application/json
      description: Create Task
      parameters:
      - description: body params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.TaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create Task
      tags:
      - task
  /todo/task/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Task
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Delete Task
      tags:
      - task
    get:
      consumes:
      - application/json
      description: Get Task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.TaskResponse'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get Task by ID
      tags:
      - task
    put:
      consumes:
      - application/json
      description: Update Task
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: body params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.TaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.message'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Update Task
      tags:
      - task
  /todo/tasks:
    get:
      consumes:
      - application/json
      description: Get Tasks With Pagination
      parameters:
      - description: pagination parameter page
        in: query
        name: page
        type: integer
      - description: pagination parameter page size
        in: query
        name: pageSize
        type: integer
      - description: filter parameter completed
        in: query
        name: status
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.TaskResponse'
            type: array
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get Tasks With Pagination
      tags:
      - task
swagger: "2.0"
